plugins {
    id 'java'
    id 'application'
	id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'com.google.protobuf' version '0.8.17'
    id 'idea'
}

apply plugin: 'com.google.protobuf'

group 'isc.pucmm.eict'
version '1.0-SNAPSHOT'

mainClassName = 'edu.pucmm.eict.Main'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    //Javalin
    implementation 'org.slf4j:slf4j-simple:1.7.30'
    implementation 'io.javalin:javalin:3.13.7'
    //Freemarker for templates
    implementation group: 'org.freemarker', name: 'freemarker', version: '2.3.28'
	//Manejador de base de datos
    implementation 'com.h2database:h2:1.4.200'
    implementation 'org.postgresql:postgresql:42.2.1'
    //Encriptacion
    implementation 'org.jasypt:jasypt:1.9.3'
	//ORM - Hibernate
    implementation 'org.hibernate:hibernate-core:5.4.17.Final'
    implementation 'org.hibernate:hibernate-entitymanager:5.4.17.Final'
    //URL Validator
    implementation 'commons-validator:commons-validator:1.7'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.0.1'

    //REST
    compile 'com.konghq:unirest-java:3.7.04'

    //gRPC
    implementation 'io.grpc:grpc-netty-shaded:1.39.0'
    implementation 'io.grpc:grpc-protobuf:1.39.0'
    implementation 'io.grpc:grpc-stub:1.39.0'
    implementation 'com.google.protobuf:protobuf-java:3.17.3'

    // User agent parser
    // https://mvnrepository.com/artifact/com.blueconic/browscap-java
    // https://github.com/blueconic/browscap-java
    implementation group: 'com.blueconic', name: 'browscap-java', version: '1.3.6'

    //Libreria GSON para trabajar con el parseo de JSON a Objeto y viceversa.
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.1'

    //Libreria para JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.10.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.10.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.10.5'

    implementation "io.javalin:javalin-openapi:3.9.1"
    //libreria para SOAP de Jetty https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-http-spi
    implementation group: 'org.eclipse.jetty', name: 'jetty-http-spi', version: '9.4.30.v20200611'

    //Libreria para convertir img url to base64
    implementation 'commons-io:commons-io:2.8.0'

    implementation 'javax.annotation:javax.annotation-api:1.3.2'

}

sourceSets {
    src {
        main {
            java {
                srcDirs 'build/generated/source/proto/main/grpc'
                srcDirs 'build/generated/source/proto/main/java'
            }
        }
    }
}

protobuf{
    protoc{
        artifact = "com.google.protobuf:protoc:3.17.2"
    }
    plugins{
        grpc{
            artifact = 'io.grpc:protoc-gen-grpc-java:1.39.0'
        }
    }
    generateProtoTasks{
        all()*.plugins {
            grpc{}
        }
    }

    generatedFilesBaseDir = "$projectDir/generated"
}

clean {
    delete protobuf.generatedFilesBaseDir
}

idea {
    module {
        // proto files and generated Java files are automatically added as
        // source dirs.
        // If you have additional sources, add them here:
        sourceDirs += file("src/generated");
    }
}

shadowJar {
    archiveBaseName.set('app')
    archiveClassifier.set('')
    archiveVersion.set('')
}

test {
    useJUnitPlatform()
}